using System;

// Token: 0x02000004 RID: 4
public class HindiCorrector
{
	// Token: 0x06000003 RID: 3 RVA: 0x00002088 File Offset: 0x00000288
	public static string GetCorrectedHindiText(string unicode_substring)
	{
		int num = HindiCorrector.hindi_letters.Length;
		string text = unicode_substring;
		for (int i = text.IndexOf("'"); i >= 0; i = text.IndexOf("'"))
		{
			text = HindiCorrector.ReplaceFirstOccurrence(text, "'", "^");
			text = HindiCorrector.ReplaceFirstOccurrence(text, "'", "*");
		}
		for (int j = text.IndexOf("\""); j >= 0; j = text.IndexOf("\""))
		{
			text = HindiCorrector.ReplaceFirstOccurrence(text, "\"", "ß");
			text = HindiCorrector.ReplaceFirstOccurrence(text, "\"", "Þ");
		}
		for (int num2 = text.IndexOf("ि"); num2 != -1; num2 = text.IndexOf("ि", num2 + 1))
		{
			char c = text[num2 - 1];
			text = text.Replace(c.ToString() + "ि", "f" + c.ToString());
			while (text.Contains("्f" + c.ToString()))
			{
				int num3 = text.IndexOf("्f" + c.ToString());
				text = text.Replace(text[num3 - 1].ToString() + "्f" + c.ToString(), "f" + text[num3 - 1].ToString() + "्" + c.ToString());
			}
		}
		string text2 = "ािीुूृेैोौं:ँॅ";
		text += "  ";
		for (int k = text.IndexOf("र्"); k > 0; k = text.IndexOf("र्"))
		{
			int num4 = k + 2;
			if (text[num4 + 1] == '्')
			{
				num4 += 2;
			}
			char value = text[num4 + 1];
			while (text2.IndexOf(value) != -1)
			{
				num4++;
				value = text[num4 + 1];
			}
			string text3 = text.Substring(k + 2, num4 - k - 1);
			text = text.Replace("र्" + text3, text3 + "Z");
		}
		text = text.Substring(0, text.Length - 2);
		for (int l = 0; l < num; l++)
		{
			int num5 = 0;
			if (text.Contains(HindiCorrector.hindi_letters[l]))
			{
				while (num5 != -1)
				{
					text = text.Replace(HindiCorrector.hindi_letters[l], HindiCorrector.replace_letters[l]);
					num5 = text.IndexOf(HindiCorrector.hindi_letters[l]);
				}
			}
		}
		return text;
	}

	// Token: 0x06000004 RID: 4 RVA: 0x00002324 File Offset: 0x00000524
	public static string ReplaceFirstOccurrence(string Source, string Find, string Replace)
	{
		int startIndex = Source.IndexOf(Find);
		return Source.Remove(startIndex, Find.Length).Insert(startIndex, Replace);
	}

	// Token: 0x04000007 RID: 7
	private static string[] hindi_letters = new string[]
	{
		"‘",
		"’",
		"“",
		"”",
		"(",
		")",
		"{",
		"}",
		"=",
		"।",
		"?",
		"-",
		"µ",
		"॰",
		",",
		".",
		"् ",
		"०",
		"१",
		"२",
		"३",
		"४",
		"५",
		"६",
		"७",
		"८",
		"९",
		"x",
		":",
		"ल्म",
		"ङ",
		"ऩ",
		"ऱ",
		"य़",
		"ग़",
		"ड़",
		"ढ़",
		"ख़्य",
		"ख़्",
		"ख़",
		"क़्य",
		"क़्",
		"क़",
		"फ़्",
		"फ़",
		"ज़्य",
		"ज़्",
		"ज़",
		"त्त्",
		"त्त",
		"क्त",
		"दृ",
		"कृ",
		"ह्न",
		"ह्य",
		"हृ",
		"ह्म",
		"ह्र",
		"ह्",
		"द्द",
		"क्ष्",
		"क्ष",
		"त्र्",
		"त्र",
		"ज्ञ",
		"छ्य",
		"ट्य",
		"ठ्य",
		"ड्य",
		"ढ्य",
		"द्य",
		"द्व",
		"श्र",
		"ट्र",
		"ड्र",
		"ढ्र",
		"छ्र",
		"क्र",
		"फ्र",
		"द्र",
		"प्र",
		"ग्र",
		"रु",
		"रू",
		"्र",
		"ओ",
		"औ",
		"आ",
		"अ",
		"ई",
		"इ",
		"उ",
		"ऊ",
		"ऐ",
		"ए",
		"ऋ",
		"क्",
		"क",
		"क्क",
		"ख्",
		"ख",
		"ग्",
		"ग",
		"घ्",
		"घ",
		"ङ",
		"चै",
		"च्",
		"च",
		"छ",
		"ज्",
		"ज",
		"झ्",
		"झ",
		"ञ",
		"ट्ट",
		"ट्ठ",
		"ट",
		"ठ",
		"ड्ड",
		"ड्ढ",
		"ड",
		"ढ",
		"ण्",
		"ण",
		"त्",
		"त",
		"थ्",
		"थ",
		"द्ध",
		"द",
		"ध्",
		"ध",
		"न्",
		"न",
		"प्",
		"प",
		"फ्",
		"फ",
		"ब्",
		"ब",
		"भ्",
		"भ",
		"म्",
		"म",
		"य्",
		"य",
		"र",
		"ल्",
		"ल",
		"ळ",
		"व्",
		"व",
		"श्",
		"श",
		"ष्",
		"ष",
		"स्",
		"स",
		"ह",
		"ऑ",
		"ॉ",
		"ो",
		"ौ",
		"ा",
		"ी",
		"ु",
		"ू",
		"ृ",
		"े",
		"ै",
		"ं",
		"ँ",
		"ः",
		"ॅ",
		"ऽ",
		"् ",
		"्"
	};

	// Token: 0x04000008 RID: 8
	private static string[] replace_letters = new string[]
	{
		"^",
		"*",
		"Þ",
		"ß",
		"¼",
		"½",
		"¿",
		"À",
		"¾",
		"A",
		"\\",
		"&",
		"&",
		"Œ",
		"]",
		"-",
		"~ ",
		"å",
		"ƒ",
		"„",
		"…",
		"†",
		"‡",
		"ˆ",
		"‰",
		"Š",
		"‹",
		"Û",
		"%",
		"Ye",
		"³",
		"u+",
		"j+",
		";+",
		"x+",
		"M+",
		"<+",
		"[+;",
		"[+",
		"[k+",
		"D+;",
		"D+",
		"d+",
		"¶+",
		"Q+",
		"T+;",
		"T+",
		"t+",
		"Ù",
		"Ùk",
		"Dr",
		"–",
		"—",
		"à",
		"á",
		"â",
		"ã",
		"ºz",
		"º",
		"í",
		"{",
		"{k",
		"«",
		"=",
		"K",
		"Nî",
		"Vî",
		"Bî",
		"Mî",
		"<î",
		"|",
		"}",
		"J",
		"Vª",
		"Mª",
		"<ªª",
		"Nª",
		"Ø",
		"Ý",
		"æ",
		"ç",
		"xz",
		"#",
		":",
		"z",
		"vks",
		"vkS",
		"vk",
		"v",
		"bZ",
		"b",
		"m",
		"Å",
		",s",
		",",
		"_",
		"D",
		"d",
		"ô",
		"[",
		"[k",
		"X",
		"x",
		"?",
		"?k",
		"³",
		"pkS",
		"P",
		"p",
		"N",
		"T",
		"t",
		"÷",
		">",
		"¥",
		"ê",
		"ë",
		"V",
		"B",
		"ì",
		"ï",
		"M",
		"<",
		".",
		".k",
		"R",
		"r",
		"F",
		"Fk",
		")",
		"n",
		"/",
		"/k",
		"U",
		"u",
		"I",
		"i",
		"¶",
		"Q",
		"C",
		"c",
		"H",
		"Hk",
		"E",
		"e",
		"¸",
		";",
		"j",
		"Y",
		"y",
		"G",
		"O",
		"o",
		"'",
		"'k",
		"\"",
		"\"k",
		"L",
		"l",
		"g",
		"v‚",
		"‚",
		"ks",
		"kS",
		"k",
		"h",
		"q",
		"w",
		"`",
		"s",
		"S",
		"a",
		"¡",
		"%",
		"W",
		"·",
		"~ ",
		"~"
	};
}
